" BASICS
set nocompatible " Disable vi compatibility which can cause unexpected issues.
filetype on " Enable file type detection.
filetype plugin on " Enable plugins and load plugin for the detected file type.
filetype indent on " Load an indent file for the detected file type.
syntax on " Turn syntax highlight on.
set number " Add numbers to line.
set cursorline " Highlight cursor line underneath the cursor horizontally.
set cursorcolumn " Highlight cursor line underneath the cursor vertically
set encoding=UTF-8 " Encoding
set shiftwidth=4 " Set shift width to 4 spaces.
set tabstop=4 " Set tab width to 4 columns.
set expandtab " Use space characters instead of tabs.
set nobackup " Do not save backup files.
set scrolloff=10 " Do not let cursor scroll below or above N number of lines when scrolling.
set nowrap " Do not wrap lines. Allow long lines to extend as far as the line goes.
set incsearch " While searching though a file incrementally highlight matching characters as you type.
set ignorecase " Ignore capital letters during search.
set smartcase " This will allow you to search specifically for capital letters.
set showcmd " Show partial command you type in the last line of the screen.
set showmode " Show the mode you are on the last line.
set showmatch " Show matching words during a search.
set hlsearch " Use highlighting when doing a search.
set history=1000 " Set the commands to save in history default number is 20.
set hidden "Mantiene un historiasl de los archivos abiertos aunque no se hayan guardado cambios.
set noerrorbells " Quita el ruido de error en la terminal
set incsearch " Ilumina mientras se escribe al buscar
"set guicursor
set relativenumber " Muestra la candidad de lineas antes y despues de la actual.
set nu " Muestra el numero de lÃ­nea actual
"  /BASICS

" Plugins
call plug#begin('~/.vim/plugged')
" Colorize brackets, parenthesis, etc.
Plug 'frazrepo/vim-rainbow'
" Show folder tree view.
Plug 'preservim/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'PhilRunninger/nerdtree-visual-selection'
" Better info.
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
" Multiline comments.
Plug 'preservim/nerdcommenter'
" File Search.
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
" Search
Plug 'mileszs/ack.vim'
" Programing languages support
Plug 'sheerun/vim-polyglot'
" Autopair
Plug 'jiangmiao/auto-pairs'
" Surround anyting
Plug 'tpope/vim-surround'
"Plug 'ryanoasis/vim-devicons'
Plug 'benmills/vimux'
Plug 'christoomey/vim-tmux-navigator'
Plug 'leafOfTree/vim-vue-plugin'
" HTML Snippets
Plug 'mattn/emmet-vim'
" Themes
Plug 'morhetz/gruvbox'
Plug 'tpope/vim-rails'
Plug 'dense-analysis/ale'
call plug#end()
" /Plugins

let g:rainbow_active = 1

let mapleader = ' '

" Remap esc key to jj in insert mode.
inoremap jj <esc>

" Remap last cursor position
nnoremap <leader>\ ``

" NERDTree
nnoremap <leader>nt :NERDTree<CR>

" loading the plugin
let g:webdevicons_enable = 1
" adding the flags to NERDTree
let g:webdevicons_enable_nerdtree = 1
" adding to vim-airline's tabline
let g:webdevicons_enable_airline_tabline = 1
" adding to vim-airline's statusline
let g:webdevicons_enable_airline_statusline = 1
" ctrlp glyphs
let g:webdevicons_enable_ctrlp = 1
" Color scheme
set background=dark
colorscheme gruvbox
let g:gruvbox_contrast_dark='hard'

"Use 24-bit (true-color) mode in Vim/Neovim when outside tmux.
"If you're using tmux version 2.2 or later, you can remove the outermost $TMUX check and use tmux's 24-bit color support
"(see < http://sunaku.github.io/tmux-24bit-color.html#usage > for more information.)
if (empty($TMUX))
  if (has("nvim"))
    "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
  endif
  "For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
  "Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >
  " < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
  if (has("termguicolors"))
    set termguicolors
  endif
endif

let NERDTreeShowHidden=1

let g:ale_linters = {
      \   'ruby': ['standardrb', 'rubocop'],
      \   'python': ['flake8', 'pylint'],
      \   'javascript': ['eslint'],
      \}

let g:ale_fixers = {
      \    'ruby': ['standardrb'],
      \}
let g:ale_fix_on_save = 1

function! LinterStatus() abort
  let l:counts = ale#statusline#Count(bufnr(''))

  let l:all_errors = l:counts.error + l:counts.style_error
  let l:all_non_errors = l:counts.total - l:all_errors

  return l:counts.total == 0 ? 'âœ¨ all good âœ¨' : printf(
        \   'ðŸ˜ž %dW %dE',
        \   all_non_errors,
        \   all_errors
        \)
endfunction

set statusline=
set statusline+=%m
set statusline+=\ %f
set statusline+=%=
set statusline+=\ %{LinterStatus()}
